{"version":3,"sources":["components/multiRangeSlider/index.js","components/multiRangeSlider/MultiRangeSlider.js","components/main.component.js","App.js","reportWebVitals.js","index.js"],"names":["MultiRangeSlider","_ref","min","max","onChange","_useState","useState","_useState2","Object","slicedToArray","minVal","setMinVal","_useState3","_useState4","maxVal","setMaxVal","minValRef","useRef","maxValRef","range","getPercent","useCallback","value","Math","round","useEffect","current","minPercent","maxPercent","style","left","concat","width","react_default","a","createElement","className","type","ref","event","target","toString","classnames","thumb--zindex-5","Button","styled","button","_templateObject","taggedTemplateLiteral","Title","h1","_templateObject2","ParBold","p","_templateObject3","Par","_templateObject4","Input","input","_templateObject5","Main","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSelect","bind","assertThisInitialized","loadSongs","onDanceMinMaxChange","onEnergyMinMaxChange","onModeMinMaxChange","onMajChange","onMinChange","onSpeechMinMaxChange","onAcoustMinMaxChange","onInstMinMaxChange","onLiveMinMaxChange","onValMinMaxChange","onTempMinMaxChange","filterTracks","onUsernameChange","createPlaylist","onChangePlaylistName","state","username","token","playlist_name","playlists","selected_playlist","loaded","playlistCreated","playlistLink","tracksWithFeatures","filtered_tracks","minValue","maxValue","dancemin","dancemax","energymin","energymax","majorchecked","minorchecked","speechmin","speechmax","acoustmin","acoustmax","instmin","instmax","livemin","livemax","valmin","valmax","tempmin","tempmax","_this2","console","log","axios","get","then","res","setState","data","id","selectedid","catch","error","e","_this3","length","loadingTracks","maj","modemax","checked","modemin","_this4","filtering_args","tracklist","filters","post","_this5","track_ids","map","creation_obj","link","i","key","name","onClick","components_multiRangeSlider","display","justifyContent","alignItems","List","sx","maxWidth","bgcolor","overflow","maxHeight","& ul","padding","ListItem","ListItemText","primary","artist","href","Component","spotifyAuthEndpoint","App_templateObject","App_templateObject2","App","setToken","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","main_component_Main","App_Button","removeItem","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","react_router_dom","react_router","path","element","src_App"],"mappings":"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","file":"static/js/main.7704bf88.chunk.js","sourcesContent":["import MultiRangeSlider from \"./MultiRangeSlider\";\n\nexport default MultiRangeSlider;\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport \"./multiRangeSlider.css\";\n\nconst MultiRangeSlider = ({ min, max, onChange }) => {\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(null);\n  const maxValRef = useRef(null);\n  const range = useRef(null);\n\n  // Convert to percentage\n  const getPercent = useCallback(\n    (value) => Math.round(((value - min) / (max - min)) * 100),\n    [min, max]\n  );\n\n  // Set width of the range to decrease from the left side\n  useEffect(() => {\n    if (maxValRef.current) {\n      const minPercent = getPercent(minVal);\n      const maxPercent = getPercent(+maxValRef.current.value); // Preceding with '+' converts the value from type string to type number\n\n      if (range.current) {\n        range.current.style.left = `${minPercent}%`;\n        range.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [minVal, getPercent]);\n\n  // Set width of the range to decrease from the right side\n  useEffect(() => {\n    if (minValRef.current) {\n      const minPercent = getPercent(+minValRef.current.value);\n      const maxPercent = getPercent(maxVal);\n\n      if (range.current) {\n        range.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [maxVal, getPercent]);\n\n  // Get min and max values when their state changes\n  useEffect(() => {\n    onChange({ min: minVal, max: maxVal });\n  }, [minVal, maxVal, onChange]);\n\n  return (\n    <div className=\"container\">\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={minVal}\n        ref={minValRef}\n        onChange={(event) => {\n          const value = Math.min(+event.target.value, maxVal - 1);\n          setMinVal(value);\n          event.target.value = value.toString();\n        }}\n        className={classnames(\"thumb thumb--zindex-3\", {\n          \"thumb--zindex-5\": minVal > max - 100\n        })}\n      />\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={maxVal}\n        ref={maxValRef}\n        onChange={(event) => {\n          const value = Math.max(+event.target.value, minVal + 1);\n          setMaxVal(value);\n          event.target.value = value.toString();\n        }}\n        className=\"thumb thumb--zindex-4\"\n      />\n\n      <div className=\"slider\">\n        <div className=\"slider__track\" />\n        <div ref={range} className=\"slider__range\" />\n        <div className=\"slider__left-value\">{minVal}</div>\n        <div className=\"slider__right-value\">{maxVal}</div>\n      </div>\n    </div>\n  );\n};\n\nMultiRangeSlider.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default MultiRangeSlider;\n","import React, { Component } from 'react';\nimport MultiRangeSlider from \"./multiRangeSlider\";\nimport axios from 'axios'\nimport styled from \"styled-components\";\nimport \"./main.component.css\";\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n//import ListSubheader from '@mui/material/ListSubheader';\n\n//import { useNavigate } from \"react-router-dom\";\n\nconst Button = styled.button`\n    background-color: #4196F7;\n    color: white;\n    font-size: 15px;\n    padding: 5px 20px;\n    border-radius: 20px;\n    margin: 10px 10px;\n    cursor: pointer;\n`;\n\nconst Title = styled.h1`\n    font-weight: bold; \n    font-family: Tahoma;\n    text-align: center;\n    font-size: 30px;\n    background-color: e7e6e7`;\n\nconst ParBold = styled.p`\n    font-weight: bold; \n    font-family: Tahoma;\n    text-align: center;\n    font-size: 20px;\n    background-color: e7e6e7`;\n\nconst Par = styled.p`\n    font-family: Tahoma;\n    text-align: center;\n    font-size: 15px;\n    background-color: e7e6e7`;\n\nconst Input = styled.input`\n    background-color: e7e6e7;\n    color: black;\n    font-size: 15px;\n    padding: 5px 10px;\n    border-radius: 0px;\n    margin: 10px 10px;\n    cursor: pointer;`\n    ;\n  \nexport default class Main extends Component {\n    constructor(props) {\n        super(props)\n        this.onSelect = this.onSelect.bind(this);\n        this.loadSongs = this.loadSongs.bind(this);\n        //this.getAudioFeatures = this.getAudioFeatures.bind(this)\n        this.onDanceMinMaxChange = this.onDanceMinMaxChange.bind(this)\n        this.onEnergyMinMaxChange = this.onEnergyMinMaxChange.bind(this)\n        this.onModeMinMaxChange = this.onModeMinMaxChange.bind(this)\n        this.onMajChange = this.onMajChange.bind(this)\n        this.onMinChange = this.onMinChange.bind(this)\n        this.onSpeechMinMaxChange = this.onSpeechMinMaxChange.bind(this)\n        this.onAcoustMinMaxChange = this.onAcoustMinMaxChange.bind(this)\n        this.onInstMinMaxChange = this.onInstMinMaxChange.bind(this)\n        this.onLiveMinMaxChange = this.onLiveMinMaxChange.bind(this)\n        this.onValMinMaxChange = this.onValMinMaxChange.bind(this)\n        this.onTempMinMaxChange = this.onTempMinMaxChange.bind(this)\n        this.filterTracks = this.filterTracks.bind(this)\n        this.onUsernameChange = this.onUsernameChange.bind(this)\n        this.createPlaylist = this.createPlaylist.bind(this)\n        this.onChangePlaylistName = this.onChangePlaylistName.bind(this)\n        this.state = {\n            username: '',\n            token:this.props.token,\n            playlist_name:'',\n            playlists: [],\n            selected_playlist:{},\n            loaded:'',\n            playlistCreated: '',\n            playlistLink:'',\n            //tracks: [],\n            tracksWithFeatures:[],\n            filtered_tracks:[],\n            minValue: 0,\n            maxValue:100,\n            dancemin: 0.8,\n            dancemax: 1,\n            energymin: 0,\n            energymax: 1,\n            majorchecked: true,\n            minorchecked: true, // default both major and minor keys allowed\n            speechmin: 0,\n            speechmax: 1,\n            acoustmin: 0,\n            acoustmax: 1,\n            instmin: 0,\n            instmax: 1,\n            livemin: 0,\n            livemax: 1,\n            valmin: 0,\n            valmax: 1,\n            tempmin: 0,\n            tempmax: 500,\n            }\n    }\n\n   componentDidMount() {\n        console.log(\"PROPS:\", this.props)\n        console.log(\"USERNAME:\", this.state.username)\n        console.log(\"TOKEN:\", this.state.token)\n  \n        axios.get('/user_playlists/' + this.state.token)\n            .then(res => {\n                this.setState({ playlists: res.data });\n                console.log(\"PLAYLISTS\")\n                console.log(res.data)\n                console.log(res.data[0].id)\n                this.setState({selected_playlist: res.data[0].id})\n                console.log(this.state.selectedid)\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n    }\n\n    onSelect(e) {\n        console.log(this.state.playlists)\n        this.setState({ selected_playlist: e.target.value })\n    }\n\n    loadSongs(e) {\n        console.log(\"LOADING SONGS!\")\n        this.setState({loaded: \"Loading tracks, please wait...\"})\n        axios.get('/playlist_tracks_features/' + this.state.selected_playlist + '/' + this.state.token)\n            .then(res => {\n                this.setState({tracksWithFeatures: res.data });\n                console.log(res.data)\n                console.log(\"TOTAL TRACKS:\" + res.data.length)\n                console.log(this.state.loadingTracks)\n                this.setState({loaded: \"Tracks loaded! Please choose filtering options.\"})\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n    }\n\n    /*getAudioFeatures(e) {\n        console.log(this.state.tracks)\n        axios.post('/audio_features', this.state.tracks)\n            .then(res => {\n                console.log(res.data[0])\n                this.setState({tracksWithFeatures: res.data})\n                console.log(\"GOT FEATURE DATA\")\n        })\n    }*/\n\n    onDanceMinMaxChange(e) {\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({dancemin: min})\n        this.setState({dancemax: max})\n    }\n\n    onEnergyMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({energymin: min})\n        this.setState({energymax: max})\n    }\n\n\n    onModeMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        this.setState({maj: e.min})\n        this.setState({modemax: e.max})\n    }\n\n    onMajChange(e) {\n        console.log(\"Major\", this.state.majorchecked, \"Minor:\", this.state.minorchecked)\n        this.setState({majorchecked: e.target.checked})\n        console.log(\"EVENT\", e.target.checked)\n        console.log(\"Major\", this.state.majorchecked, \"Minor:\", this.state.minorchecked)\n    }\n\n    onMinChange(e) {\n        this.setState({minorchecked: e.target.checked})\n        console.log(this.state.majorchecked, this.state.minorchecked)\n    }\n\n\n    onSpeechMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({speechmin: min})\n        this.setState({speechmax: max})\n    }\n\n    onAcoustMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({acoustmin: min})\n        this.setState({acoustmax: max})\n    }\n\n    onInstMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({instmin: min})\n        this.setState({instmax: max})\n    }\n\n    onLiveMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({livemin: min})\n        this.setState({livemax: max})\n    }\n\n    onValMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({valmin: min})\n        this.setState({valmax: max})\n    }\n\n    onTempMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        this.setState({tempmin: e.min})\n        this.setState({tempmax: e.max})\n    }\n\n    filterTracks(e) {\n        console.log(\"Major\", this.state.majorchecked, \"Minor:\", this.state.minorchecked)\n        console.log(\"FILTERING TRACKS!\")\n        var modemin, modemax; \n        if (this.state.minorchecked === true) {\n            modemin = 0; \n        } else {\n            modemin=1;\n        }\n        if (this.state.majorchecked === true) {\n            modemax = 1; \n        } else {\n            modemax = 0;\n        }\n\n        var filtering_args = {\n                \"tracklist\":this.state.tracksWithFeatures,\n                \"filters\": {\n                    \"dancemin\": this.state.dancemin,\n                    \"dancemax\": this.state.dancemax,\n                    \"energymin\": this.state.energymin,\n                    \"energymax\": this.state.energymax,\n                    \"modemin\": modemin,\n                    \"modemax\": modemax,\n                    \"speechmin\": this.state.speechmin,\n                    \"speechmax\": this.state.speechmax,\n                    \"acoustmin\": this.state.acoustmin,\n                    \"acoustmax\": this.state.acoustmax,\n                    \"instmin\": this.state.instmin,\n                    \"instmax\": this.state.instmax,\n                    \"livemin\": this.state.livemin,\n                    \"livemax\": this.state.livemax,\n                    \"valmin\": this.state.valmin,\n                    \"valmax\": this.state.valmax,\n                    \"tempmin\": this.state.tempmin,\n                    \"tempmax\": this.state.tempmax,\n                }\n            }\n        axios.post('/filter_tracks', filtering_args)\n        .then((res) => {\n            console.log(res.data)\n            this.setState({ filtered_tracks: res.data})\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    onUsernameChange(e) {\n        this.setState({ username: e.target.value })\n    }\n\n    onChangePlaylistName(e) {\n        this.setState({ playlist_name: e.target.value })\n    }\n\n    createPlaylist(e) {\n        var track_ids = this.state.filtered_tracks.map((data)  => {\n            return (data.id)})\n        console.log(track_ids)\n\n        var creation_obj = {\n            \"playlist_name\": this.state.playlist_name,\n            \"track_ids\": track_ids\n        }\n\n        this.setState({ playlistCreated: \"Creating your playlist...\"})\n        axios.post('/create_playlist/' + this.state.username + '/' + this.state.token, creation_obj)\n        .then((res) => {\n            console.log(res.data)\n            this.setState({ playlistLink: res.data.link})\n            this.setState({ playlistCreated: \"Playlist created! Check it out on Spotify :)\"})\n        }).catch((error) => {\n            console.log(error)\n            this.setState({ playlistCreated: \"Playlist creation failed...check that your username is correct!\"})\n        });   \n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <Title>Welcome to the Spotify Playlist Maker!</Title>\n                <ParBold>Choose your base playlist: </ParBold>\n                <div>\n                    <div className=\"custom-select\">\n                        <select\n                            value={this.state.selected_playlist}\n                            onChange={this.onSelect}>\n                            {this.state.playlists.map((data,i)  => {\n                                return (\n                                    <option key={i} value={data.id}> {data.name} </option>\n                                )\n                                })}\n                        </select>\n                    </div>\n                    <Button onClick={this.loadSongs}>Confirm Playlist</Button>\n                    <Par>{this.state.loaded}</Par>\n                    <Par>Danceability Range</Par>\n                    <MultiRangeSlider\n                        id=\"slider1\"\n                        min={0}\n                        max={100}\n                        onChange={this.onDanceMinMaxChange}\n                    />\n                    <Par>Energy Range</Par>\n                    <MultiRangeSlider\n                        id=\"slider2\"\n                        min={0}\n                        max={100}\n                        onChange={this.onEnergyMinMaxChange}\n                    />\n                    <Par>Mode Selection</Par>\n                    <input type=\"checkbox\" id=\"majorcheck\" name=\"major\" value=\"maj\" checked={this.state.majorchecked} onChange={this.onMajChange} />Major key\n                    <input type=\"checkbox\" id=\"minorcheck\" name=\"minor\" value=\"min\" checked={this.state.minorchecked} onChange={this.onMinChange} />Minor key\n                    <Par>Speechiness Range</Par>\n                    <MultiRangeSlider\n                        id=\"slider4\"\n                        min={0}\n                        max={100}\n                        onChange={this.onSpeechMinMaxChange}\n                    />\n                    <Par>Acoustic Range</Par>\n                    <MultiRangeSlider\n                        id=\"slider5\"\n                        min={0}\n                        max={100}\n                        onChange={this.onAcoustMinMaxChange}\n                    />\n                    <Par>Instrumentalness Range</Par>\n                    <MultiRangeSlider\n                        id=\"slider6\"\n                        min={0}\n                        max={100}\n                        onChange={this.onInstMinMaxChange}\n                    />\n                    <Par>Liveness Range</Par>\n                    <MultiRangeSlider\n                        id=\"slider7\"\n                        min={0}\n                        max={100}\n                        onChange={this.onLiveMinMaxChange}\n                    />\n                    <Par>Valence Range</Par>\n                    <MultiRangeSlider\n                        id=\"slider8\"\n                        min={0}\n                        max={100}\n                        onChange={this.onValMinMaxChange}\n                    />\n                    <Par>Tempo Range</Par>\n                    <MultiRangeSlider\n                        id=\"slider9\"\n                        min={0}\n                        max={500}\n                        onChange={this.onTempMinMaxChange}\n                    />\n                    <br></br>\n                    <Button onClick={this.filterTracks}>Filter Playlist Tracks</Button>\n                    <br></br>\n                    <ParBold>Track List:</ParBold>\n                    {(this.state.filtered_tracks.length === 0) ? (\n                    <Par>No tracks fit the filter criteria!</Par>\n                    ) : (\n                        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n                            <List\n                                sx={{\n                                    width: '100%',\n                                    maxWidth: 360,\n                                    bgcolor: '#ffffff',\n                                    alignItems: \"center\",\n                                    overflow: 'auto',\n                                    maxHeight: 300,\n                                    '& ul': { padding: 0 },\n                                }}\n                                >\n                                {this.state.filtered_tracks.map((data,i) => (\n                                        <ListItem key={`item-${i}`} sx={{alignItems:\"center\"}}>\n                                            <ListItemText primary={`${data.name} - ${data.artist}`}/>\n                                        </ListItem>\n                                ))}\n                            </List>    \n                        </div>\n                    )}     \n                    \n                </div>\n                    <Par>Happy? Enter your Spotify username and desired playlist name:</Par>\n                    <div>\n                        <Par>Username:</Par>\n                        <Input type=\"text\" value={this.state.username} onChange={this.onUsernameChange}/>\n                        <Par>Playlist Name:</Par>\n                        <Input type=\"text\" value={this.state.playlist_name} onChange={this.onChangePlaylistName}  />\n                        <br></br>\n                        <Button onClick={this.createPlaylist}>Create your playlist!</Button>\n                        <Par>{this.state.playlistCreated}</Par>\n                        {(this.state.playlistLink) ? (\n                           <a href={this.state.playlistLink}>Your new playlist</a>\n                        ):(\n                          <p></p>\n                        )}\n                    </div>\n            </div>\n        )\n    }\n}\n\n//({ min, max }) => console.log(`min = ${min}, max = ${max}`)\n// <button onClick={this.getAudioFeatures}>Get Features</button>\n","import React, { Component } from 'react';\n//import ReactDOM from 'react-dom/client';\nimport Main from './components/main.component.js';\n//import Cookies from 'universal-cookie';\n//import { useNavigate } from \"react-router-dom\";\n//import axios from 'axios'\nimport styled from \"styled-components\";\n//import { render } from 'react-dom';\n//import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport {useEffect, useState} from 'react';\n\nvar CLIENT_ID = '720ccd49410842c7bddb89cbfc7686a4'\n//var CLIENT_SECRET = '35f10e9a0b204412843f84bb84b3a959'\nvar REDIRECT_URL = 'https://spotipy-appsadie694.herokuapp.com/' //'http://127.0.0.1:5000/'  //'https://spotipy-appsadie694.herokuapp.com/main' //'http://localhost:3000/main' # front end\nvar SCOPE = 'user-library-read playlist-modify-public playlist-read-private'\nvar spotifyAuthEndpoint = \"https://accounts.spotify.com/authorize?\"+\"client_id=\"+CLIENT_ID+\"&redirect_uri=\"+REDIRECT_URL+\"&scope=\"+SCOPE+\"&response_type=token&state=123\";\n\nconst Button = styled.button`\n  background-color: #4196F7;\n  color: white;\n  font-size: 15px;\n  padding: 10px 30px;\n  border-radius: 20px;\n  margin: 10px 10px;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  background-color: white;\n  color: black;\n  font-size: 15px;\n  padding: 5px 10px;\n  border-radius: 0px;\n  margin: 10px 10px;\n  cursor: pointer;`\n  ;\n\n  function App() {\n    const [token, setToken] = useState(\"\")\n\n    useEffect(() => {\n        const hash = window.location.hash\n        let token = window.localStorage.getItem(\"token\")\n\n        if (!token && hash) {\n            token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n\n            window.location.hash = \"\"\n            window.localStorage.setItem(\"token\", token)\n        }\n\n        setToken(token)\n\n    }, [])\n\n    const logout = () => {\n        setToken(\"\")\n        window.localStorage.removeItem(\"token\")\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                {!token ?\n                  <div>\n                    <a href={`${spotifyAuthEndpoint}`}>Login to Spotify</a>\n                  </div>  \n                    : <div> \n                        <Main token={token}/>\n                        <Button onClick={logout}>Logout</Button>\n                      </div>\n                }\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n\n\n/*export default class App extends Component  {\n\n  constructor(props) {\n      super(props)\n      this.authorize = this.authorize.bind(this);\n      this.loginSpotify = this.loginSpotify.bind(this);\n      this.onChangeUserName = this.onChangeUserName.bind(this);\n      this.state = {\n          username:'',\n          token:'',\n          cookieval:'',\n          redir_link:''\n      }\n  }\n\n  onChangeUserName(e) {\n    this.setState({ username: e.target.value })\n  } \n\n  authorize(e) {\n    console.log(\"LOGIN BUTTON CLICKED\")\n    // MAKE API CALL!\n    axios.get('/authenticate/'+this.state.username)\n        .then((res) => {\n            console.log(res.data)\n            this.setState({token: res.data})\n        }).catch((error) => {\n            console.log(error)\n        });\n  }\n\n  loginSpotify (e){\n    window.open(spotifyAuthEndpoint,'callBackWindow','height=500,width=400');\n    //This event listener will trigger once your callback page adds the token to localStorage\n    window.addEventListener(\"storage\",function(event){\n        if (event.key === \"accessToken\"){\n            console.log(\"ACCESS TOKEN:\", event.newValue)\n            this.setState({ token: event.newValue })\n            //do things with spotify API using your access token here!!\n        }\n    });\n}\n  \n  render(){\n  return (\n    <div className=\"App\">\n            <a href={`https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL}&scope=${SCOPE}&response_type=token&state=123`}>Login to Spotify</a>\n            <Input type=\"text\" value={this.state.username} onChange={this.onChangeUserName}  />\n            <br></br>\n            <Button onClick={this.loginSpotify}>Login to Spotify</Button>\n            <Link to=\"/login\">Login</Link>\n            <Routes>\n            <Route path=\"/\" element={<div>Default Page Content</div>} />\n            <Route path=\"/main\" element={<Main username={this.state.username}/>} />  \n      </Routes>\n    </div>\n  );\n  }\n}\n\n/*<form onSubmit={this.authorize}>\n                <div className=\"form-group\">\n                    <label>Add User Name</label>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Log In\" className=\"btn btn-success btn-block\" />\n                </div>\n            </form> */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"*\" element={ <App /> }>\n      </Route>  \n    </Routes>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}