{"version":3,"sources":["components/multiRangeSlider/index.js","components/multiRangeSlider/MultiRangeSlider.js","components/main.component.js","App.js","reportWebVitals.js","index.js"],"names":["MultiRangeSlider","_ref","min","max","onChange","_useState","useState","_useState2","Object","slicedToArray","minVal","setMinVal","_useState3","_useState4","maxVal","setMaxVal","minValRef","useRef","maxValRef","range","getPercent","useCallback","value","Math","round","useEffect","current","minPercent","maxPercent","style","left","concat","width","react_default","a","createElement","className","type","ref","event","target","toString","classnames","thumb--zindex-5","Button","styled","button","_templateObject","taggedTemplateLiteral","Title","h1","_templateObject2","ParBold","p","_templateObject3","Par","_templateObject4","Input","input","_templateObject5","Main","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSelect","bind","assertThisInitialized","loadSongs","onDanceMinMaxChange","onEnergyMinMaxChange","onModeMinMaxChange","onMajChange","onMinChange","onSpeechMinMaxChange","onAcoustMinMaxChange","onInstMinMaxChange","onLiveMinMaxChange","onValMinMaxChange","onTempMinMaxChange","filterTracks","createPlaylist","onChangePlaylistName","state","username","token","playlist_name","playlists","selected_playlist","tracksWithFeatures","filtered_tracks","minValue","maxValue","dancemin","dancemax","energymin","energymax","majorchecked","minorchecked","speechmin","speechmax","acoustmin","acoustmax","instmin","instmax","livemin","livemax","valmin","valmax","tempmin","tempmax","_this2","console","log","axios","get","then","res","data","setState","catch","error","id","selectedid","e","_this3","length","maj","modemax","checked","modemin","_this4","filtering_args","tracklist","filters","post","track_ids","map","creation_obj","i","key","name","onClick","components_multiRangeSlider","artist","Component","App_templateObject","App_templateObject2","App","authorize","onChangeUserName","cookieval","redir_link","main_component_Main","App_Input","App_Button","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","react_router_dom","react_router","path","element","App_App"],"mappings":"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","file":"static/js/main.98e70a3f.chunk.js","sourcesContent":["import MultiRangeSlider from \"./MultiRangeSlider\";\n\nexport default MultiRangeSlider;\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport \"./multiRangeSlider.css\";\n\nconst MultiRangeSlider = ({ min, max, onChange }) => {\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(null);\n  const maxValRef = useRef(null);\n  const range = useRef(null);\n\n  // Convert to percentage\n  const getPercent = useCallback(\n    (value) => Math.round(((value - min) / (max - min)) * 100),\n    [min, max]\n  );\n\n  // Set width of the range to decrease from the left side\n  useEffect(() => {\n    if (maxValRef.current) {\n      const minPercent = getPercent(minVal);\n      const maxPercent = getPercent(+maxValRef.current.value); // Preceding with '+' converts the value from type string to type number\n\n      if (range.current) {\n        range.current.style.left = `${minPercent}%`;\n        range.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [minVal, getPercent]);\n\n  // Set width of the range to decrease from the right side\n  useEffect(() => {\n    if (minValRef.current) {\n      const minPercent = getPercent(+minValRef.current.value);\n      const maxPercent = getPercent(maxVal);\n\n      if (range.current) {\n        range.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [maxVal, getPercent]);\n\n  // Get min and max values when their state changes\n  useEffect(() => {\n    onChange({ min: minVal, max: maxVal });\n  }, [minVal, maxVal, onChange]);\n\n  return (\n    <div className=\"container\">\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={minVal}\n        ref={minValRef}\n        onChange={(event) => {\n          const value = Math.min(+event.target.value, maxVal - 1);\n          setMinVal(value);\n          event.target.value = value.toString();\n        }}\n        className={classnames(\"thumb thumb--zindex-3\", {\n          \"thumb--zindex-5\": minVal > max - 100\n        })}\n      />\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={maxVal}\n        ref={maxValRef}\n        onChange={(event) => {\n          const value = Math.max(+event.target.value, minVal + 1);\n          setMaxVal(value);\n          event.target.value = value.toString();\n        }}\n        className=\"thumb thumb--zindex-4\"\n      />\n\n      <div className=\"slider\">\n        <div className=\"slider__track\" />\n        <div ref={range} className=\"slider__range\" />\n        <div className=\"slider__left-value\">{minVal}</div>\n        <div className=\"slider__right-value\">{maxVal}</div>\n      </div>\n    </div>\n  );\n};\n\nMultiRangeSlider.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default MultiRangeSlider;\n","import React, { Component } from 'react';\nimport MultiRangeSlider from \"./multiRangeSlider\";\nimport axios from 'axios'\nimport styled from \"styled-components\";\nimport \"./main.component.css\";\n\n//import { useNavigate } from \"react-router-dom\";\n\nconst Button = styled.button`\n    background-color: #4196F7;\n    color: white;\n    font-size: 15px;\n    padding: 5px 20px;\n    border-radius: 20px;\n    margin: 10px 10px;\n    cursor: pointer;\n`;\n\nconst Title = styled.h1`\n    font-weight: bold; \n    font-family: Tahoma;\n    text-align: center;\n    font-size: 30px;\n    background-color: white`;\n\nconst ParBold = styled.p`\n    font-weight: bold; \n    font-family: Tahoma;\n    text-align: center;\n    font-size: 20px;\n    background-color: white`;\n\nconst Par = styled.p`\n    font-family: Tahoma;\n    text-align: center;\n    font-size: 15px;\n    background-color: white`;\n\nconst Input = styled.input`\n    background-color: white;\n    color: black;\n    font-size: 15px;\n    padding: 5px 10px;\n    border-radius: 0px;\n    margin: 10px 10px;\n    cursor: pointer;`\n    ;\n  \nexport default class Main extends Component {\n    constructor(props) {\n        super(props)\n        this.onSelect = this.onSelect.bind(this);\n        this.loadSongs = this.loadSongs.bind(this);\n        //this.getAudioFeatures = this.getAudioFeatures.bind(this)\n        this.onDanceMinMaxChange = this.onDanceMinMaxChange.bind(this)\n        this.onEnergyMinMaxChange = this.onEnergyMinMaxChange.bind(this)\n        this.onModeMinMaxChange = this.onModeMinMaxChange.bind(this)\n        this.onMajChange = this.onMajChange.bind(this)\n        this.onMinChange = this.onMinChange.bind(this)\n        this.onSpeechMinMaxChange = this.onSpeechMinMaxChange.bind(this)\n        this.onAcoustMinMaxChange = this.onAcoustMinMaxChange.bind(this)\n        this.onInstMinMaxChange = this.onInstMinMaxChange.bind(this)\n        this.onLiveMinMaxChange = this.onLiveMinMaxChange.bind(this)\n        this.onValMinMaxChange = this.onValMinMaxChange.bind(this)\n        this.onTempMinMaxChange = this.onTempMinMaxChange.bind(this)\n        this.filterTracks = this.filterTracks.bind(this)\n        this.createPlaylist = this.createPlaylist.bind(this)\n        this.onChangePlaylistName = this.onChangePlaylistName.bind(this)\n        this.state = {\n            username: this.props.username,\n            token:'',\n            playlist_name:'',\n            playlists: [],\n            selected_playlist:{},\n            //tracks: [],\n            tracksWithFeatures:[],\n            filtered_tracks:[],\n            minValue: 0,\n            maxValue:100,\n            dancemin: 0.8,\n            dancemax: 1,\n            energymin: 0,\n            energymax: 1,\n            majorchecked: true,\n            minorchecked: true, // default both major and minor keys allowed\n            speechmin: 0,\n            speechmax: 1,\n            acoustmin: 0,\n            acoustmax: 1,\n            instmin: 0,\n            instmax: 1,\n            livemin: 0,\n            livemax: 1,\n            valmin: 0,\n            valmax: 1,\n            tempmin: 0,\n            tempmax: 500,\n            }\n    }\n\n   componentDidMount() {\n        console.log(this.state.username)\n        axios.get('/get_token')\n        .then((res) => {\n            console.log(res.data)\n            this.setState({token: res.data})\n        }).catch((error) => {\n            console.log(error)\n        });\n        //cookies.set(stateKey, state, { path: '/' });\n        //console.log(cookies.get(stateKey)); \n\n        axios.get('/user_playlists')\n            .then(res => {\n                this.setState({ playlists: res.data });\n                console.log(\"PLAYLISTS\")\n                console.log(res.data)\n                console.log(res.data[0].id)\n                this.setState({selected_playlist: res.data[0].id})\n                console.log(this.state.selectedid)\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n    }\n\n    onSelect(e) {\n        console.log(this.state.playlists)\n        this.setState({ selected_playlist: e.target.value })\n    }\n\n    loadSongs(e) {\n        console.log(\"LOADING SONGS!\")\n        axios.get('/playlist_tracks_features/' + this.state.username + '/' + this.state.selected_playlist)\n            .then(res => {\n                this.setState({tracksWithFeatures: res.data });\n                console.log(res.data)\n                console.log(\"TOTAL TRACKS:\" + res.data.length)\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n    }\n\n    /*getAudioFeatures(e) {\n        console.log(this.state.tracks)\n        axios.post('/audio_features', this.state.tracks)\n            .then(res => {\n                console.log(res.data[0])\n                this.setState({tracksWithFeatures: res.data})\n                console.log(\"GOT FEATURE DATA\")\n        })\n    }*/\n\n    onDanceMinMaxChange(e) {\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({dancemin: min})\n        this.setState({dancemax: max})\n    }\n\n    onEnergyMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({energymin: min})\n        this.setState({energymax: max})\n    }\n\n\n    onModeMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        this.setState({maj: e.min})\n        this.setState({modemax: e.max})\n    }\n\n    onMajChange(e) {\n        console.log(\"Major\", this.state.majorchecked, \"Minor:\", this.state.minorchecked)\n        this.setState({majorchecked: e.target.checked})\n        console.log(\"EVENT\", e.target.checked)\n        console.log(\"Major\", this.state.majorchecked, \"Minor:\", this.state.minorchecked)\n    }\n\n    onMinChange(e) {\n        this.setState({minorchecked: e.target.checked})\n        console.log(this.state.majorchecked, this.state.minorchecked)\n    }\n\n\n    onSpeechMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({speechmin: min})\n        this.setState({speechmax: max})\n    }\n\n    onAcoustMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({acoustmin: min})\n        this.setState({acoustmax: max})\n    }\n\n    onInstMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({instmin: min})\n        this.setState({instmax: max})\n    }\n\n    onLiveMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({livemin: min})\n        this.setState({livemax: max})\n    }\n\n    onValMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        var min = e.min/100\n        var max = e.max/100\n        this.setState({valmin: min})\n        this.setState({valmax: max})\n    }\n\n    onTempMinMaxChange(e){\n        //console.log(`min = ${min}, max = ${max}`)\n        this.setState({tempmin: e.min})\n        this.setState({tempmax: e.max})\n    }\n\n    filterTracks(e) {\n        console.log(\"Major\", this.state.majorchecked, \"Minor:\", this.state.minorchecked)\n        console.log(\"FILTERING TRACKS!\")\n        var modemin, modemax; \n        if (this.state.minorchecked === true) {\n            modemin = 0; \n        } else {\n            modemin=1;\n        }\n        if (this.state.majorchecked === true) {\n            modemax = 1; \n        } else {\n            modemax = 0;\n        }\n\n        var filtering_args = {\n                \"tracklist\":this.state.tracksWithFeatures,\n                \"filters\": {\n                    \"dancemin\": this.state.dancemin,\n                    \"dancemax\": this.state.dancemax,\n                    \"energymin\": this.state.energymin,\n                    \"energymax\": this.state.energymax,\n                    \"modemin\": modemin,\n                    \"modemax\": modemax,\n                    \"speechmin\": this.state.speechmin,\n                    \"speechmax\": this.state.speechmax,\n                    \"acoustmin\": this.state.acoustmin,\n                    \"acoustmax\": this.state.acoustmax,\n                    \"instmin\": this.state.instmin,\n                    \"instmax\": this.state.instmax,\n                    \"livemin\": this.state.livemin,\n                    \"livemax\": this.state.livemax,\n                    \"valmin\": this.state.valmin,\n                    \"valmax\": this.state.valmax,\n                    \"tempmin\": this.state.tempmin,\n                    \"tempmax\": this.state.tempmax,\n                }\n            }\n        axios.post('/filter_tracks', filtering_args)\n        .then((res) => {\n            console.log(res.data)\n            this.setState({ filtered_tracks: res.data})\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    onChangePlaylistName(e) {\n        this.setState({ playlist_name: e.target.value })\n    }\n\n    createPlaylist(e) {\n        var track_ids = this.state.filtered_tracks.map((data)  => {\n            return (data.id)})\n        console.log(track_ids)\n\n        var creation_obj = {\n            \"playlist_name\": this.state.playlist_name,\n            \"track_ids\": track_ids\n        }\n        axios.post('/create_playlist/' + this.state.username, creation_obj)\n        .then((res) => {\n            console.log(res.data)\n            //this.setState({ filtered_tracks: res.data})\n        }).catch((error) => {\n            console.log(error)\n        });   \n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <Title>Welcome to the Spotify Playlist Maker!</Title>\n                <ParBold>Choose your base playlist: </ParBold>\n                <div>\n                    <div className=\"custom-select\">\n                        <select\n                            value={this.state.selected_playlist}\n                            onChange={this.onSelect}>\n                            {this.state.playlists.map((data,i)  => {\n                                return (\n                                    <option key={i} value={data.id}> {data.name} </option>\n                                )\n                                })}\n                        </select>\n                    </div>\n                    <Button onClick={this.loadSongs}>Confirm Playlist</Button>\n                    <p>Danceability Range</p>\n                    <MultiRangeSlider\n                        id=\"slider1\"\n                        min={0}\n                        max={100}\n                        onChange={this.onDanceMinMaxChange}\n                    />\n                    <p>Energy Range</p>\n                    <MultiRangeSlider\n                        id=\"slider2\"\n                        min={0}\n                        max={100}\n                        onChange={this.onEnergyMinMaxChange}\n                    />\n                    <p>Mode Selection</p>\n                    <input type=\"checkbox\" id=\"majorcheck\" name=\"major\" value=\"maj\" checked={this.state.majorchecked} onChange={this.onMajChange} />Major key\n                    <input type=\"checkbox\" id=\"minorcheck\" name=\"minor\" value=\"min\" checked={this.state.minorchecked} onChange={this.onMinChange} />Minor key\n                    <p>Speechiness Range</p>\n                    <MultiRangeSlider\n                        id=\"slider4\"\n                        min={0}\n                        max={100}\n                        onChange={this.onSpeechMinMaxChange}\n                    />\n                    <p>Acoustic Range</p>\n                    <MultiRangeSlider\n                        id=\"slider5\"\n                        min={0}\n                        max={100}\n                        onChange={this.onAcoustMinMaxChange}\n                    />\n                    <p>Instrumentalness Range</p>\n                    <MultiRangeSlider\n                        id=\"slider6\"\n                        min={0}\n                        max={100}\n                        onChange={this.onInstMinMaxChange}\n                    />\n                    <p>Liveness Range</p>\n                    <MultiRangeSlider\n                        id=\"slider7\"\n                        min={0}\n                        max={100}\n                        onChange={this.onLiveMinMaxChange}\n                    />\n                    <p>Valence Range</p>\n                    <MultiRangeSlider\n                        id=\"slider8\"\n                        min={0}\n                        max={100}\n                        onChange={this.onValMinMaxChange}\n                    />\n                    <p>Tempo Range</p>\n                    <MultiRangeSlider\n                        id=\"slider9\"\n                        min={0}\n                        max={500}\n                        onChange={this.onTempMinMaxChange}\n                    />\n                    <br></br>\n                    <Button onClick={this.filterTracks}>Filter Playlist Tracks</Button>\n                    <br></br>\n                    <ParBold>Track List:</ParBold>\n                    {(this.state.filtered_tracks.length === 0) ? (\n                    <Par>No tracks fit the filter criteria!</Par>\n                    ) : (\n                    this.state.filtered_tracks.map((data,i) => (\n                        <Par key={i}>{data.name} {data.artist}</Par>\n                    ))\n                    )}\n                </div>\n                    <p>Happy? Enter your playlist name:</p>\n                    <div>\n                        <Input type=\"text\" value={this.state.playlist_name} onChange={this.onChangePlaylistName}  />\n                        <br></br>\n                        <Button onClick={this.createPlaylist}>Create your playlist!</Button>\n                    </div>\n            </div>\n        )\n    }\n}\n\n//({ min, max }) => console.log(`min = ${min}, max = ${max}`)\n// <button onClick={this.getAudioFeatures}>Get Features</button>\n","import React, { Component } from 'react';\n//import ReactDOM from 'react-dom/client';\nimport Main from './components/main.component.js';\n//import Cookies from 'universal-cookie';\n//import { useNavigate } from \"react-router-dom\";\nimport axios from 'axios'\nimport styled from \"styled-components\";\n\n\nconst Button = styled.button`\n  background-color: #4196F7;\n  color: white;\n  font-size: 15px;\n  padding: 10px 30px;\n  border-radius: 20px;\n  margin: 10px 10px;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  background-color: white;\n  color: black;\n  font-size: 15px;\n  padding: 5px 10px;\n  border-radius: 0px;\n  margin: 10px 10px;\n  cursor: pointer;`\n  ;\n\n\nexport default class App extends Component  {\n\n  constructor(props) {\n      super(props)\n      this.authorize = this.authorize.bind(this);\n      this.onChangeUserName = this.onChangeUserName.bind(this);\n      this.state = {\n          username:'',\n          token:'',\n          cookieval:'',\n          redir_link:''\n      }\n  }\n\n  onChangeUserName(e) {\n    this.setState({ username: e.target.value })\n  } \n\n  authorize(e) {\n    console.log(\"LOGIN BUTTON CLICKED\")\n    // MAKE API CALL!\n    axios.get('/authenticate/'+this.state.username)\n        .then((res) => {\n            console.log(res.data)\n            this.setState({token: res.data})\n        }).catch((error) => {\n            console.log(error)\n        });\n  }\n  \n  render(){\n  return (\n    <div className=\"App\">\n    {this.state.token ? <Main  username={this.state.username}/> : <div>\n            <Input type=\"text\" value={this.state.username} onChange={this.onChangeUserName}  />\n            <br></br>\n            <Button onClick={this.authorize}>Login to Spotify</Button>\n          </div>}\n    </div>\n  );\n  }\n}\n\n/*<form onSubmit={this.authorize}>\n                <div className=\"form-group\">\n                    <label>Add User Name</label>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Log In\" className=\"btn btn-success btn-block\" />\n                </div>\n            </form> */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"*\" element={ <App /> }>\n      </Route>  \n    </Routes>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}